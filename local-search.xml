<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>在 WSL2 中使用 Clash for Windows 代理连接</title>
    <link href="/2022/10/05/clash-config-in-wsl/"/>
    <url>/2022/10/05/clash-config-in-wsl/</url>
    
    <content type="html"><![CDATA[<div class="note note-warning">            <p>本文撰写时基于的是 Ubuntu, 如果你使用其他发行版，则下文中的部分步骤与实际情况可能有所出入。</p>          </div><p>因为网络问题，在 WSL2 中配环境时通常会非常缓慢甚至失败。在整合了各方资料及个人实践后，我总结了在 WSL2 中通过 Clash for Windows 连接代理的方法，供大家参考。</p><p><em>当然，不限于 CFW，其他代理软件也是可以的</em></p><h3 id="1-Clash-客户端内的操作"><a href="#1-Clash-客户端内的操作" class="headerlink" title="1. Clash 客户端内的操作"></a>1. Clash 客户端内的操作</h3><p>打开客户端的允许局域网连接 (Allow LAN) 开关，如图 1 所示。<br>记录下客户端内的端口 (Port)，如这里是 <code>16514</code>. 一般默认端口为 <code>7890</code>.<br><img src="https://s2.loli.net/2024/01/22/sla3HO9UVu4wozn.png" alt="图 1"></p><h3 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><div class="note note-warning">            <p>这个方法需要 Windows 11 22H2 和 WSL 2.0.5 及以上版本，如果你不满足版本要求，请参考<a rel="noopener" href="#方法二" style="color: var(--post-link-color)">方法二</a>。<br>你可以使用 <code>winver</code> 和 <code>wsl -v</code> 查看你的 Windows 和 WSL 版本。</p>          </div><div class="note note-warning">            <p>如果你使用这个方法，你需要确保 Clash 客户端中设置的系统代理类型为 HTTP 而不是 PAC，否则无法代理 HTTPS 请求:<br><img src="https://s2.loli.net/2024/01/24/Y9DhxRw47tzlWIH.png"><br>如果你确实需要使用 PAC 模式，请参考方法二，在 shell 的配置文件中添加:  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> https_proxy=<span class="hljs-variable">$http_proxy</span><br></code></pre></td></tr></table></figure>          </div><p>在开始菜单中搜索 <strong>WSL Settings</strong>, 在<strong>网络 &gt; 网络模式</strong>处选择 <code>Mirrored</code> 即可：<br><img src="https://s2.loli.net/2024/07/28/LmNRoCwHscBnYk3.png" alt="图 2"></p><p>关于镜像模式网络的更多信息请参考<a href="https://learn.microsoft.com/zh-cn/windows/wsl/networking#mirrored-mode-networking">这里</a>。  </p><div class="note note-info">            <p>如果你的 WSL 版本低于 2.3.11, 则图形配置界面不可用。</p><p>你可以在 <code>C:\Users\&lt;UserName&gt;\.wslconfig</code> 文件中 (如果不存在就手动创建一个) 加入以下内容:  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs wslconfig">[wsl2]<br>networkingMode=mirrored<br></code></pre></td></tr></table></figure>          </div><p>不过需要注意，shell 的配置文件中<strong>不能</strong>再 <code>export http_proxy=...</code>. </p><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>编辑终端配置文件 (如 <code>.bashrc</code>, <code>.zshrc</code> 等), 在文件末尾根据第 1 步记录的端口号，加入三行内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">host_ip=$(ip route show | grep -i default | awk <span class="hljs-string">&#x27;&#123;print $3&#125;&#x27;</span>)<br><span class="hljs-built_in">export</span> http_proxy=<span class="hljs-string">&quot;http://<span class="hljs-variable">$host_ip</span>:[端口]&quot;</span><br><span class="hljs-built_in">export</span> https_proxy=<span class="hljs-string">&quot;http://<span class="hljs-variable">$host_ip</span>:[端口]&quot;</span><br></code></pre></td></tr></table></figure><p>如图 3 所示，修改完后保存即可。<br><img src="https://s2.loli.net/2025/09/25/IGagEe9FVHOLbYo.png" alt="图 3"></p><p>运行 <code>source ~/.xxxrc</code> (配置文件名) 使文件修改生效，可以通过输入 <code>echo $http_proxy</code> 验证修改是否成功。</p><h3 id="3-使-root-用户保留先前设置的环境变量"><a href="#3-使-root-用户保留先前设置的环境变量" class="headerlink" title="3. 使 root 用户保留先前设置的环境变量"></a>3. 使 root 用户保留先前设置的环境变量</h3><p>在使用 <code>sudo</code> 执行命令时，之前设置的环境变量并不会生效，需要进一步设置。<br>输入 <code>sudo visudo</code>, <strong>如果你使用 Ubuntu 20.04</strong>, 加入以下内容并保存，如图 4-1 所示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sudoers">Defaults env_keep=&quot;http_proxy https_proxy&quot;<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/10/05/z4Q9PwhFmgRLG8d.png" alt="图 4-1"></p><p><strong>如果你使用 Ubuntu 22.04&#x2F;24.04</strong>, 则你看到的内容应与图 4-1 不同。如下图所示，取消相应行的注释 (删除行首的 <code>#</code>) 即可.<br><img src="https://s2.loli.net/2023/10/13/Dp628PahyF1jOVl.png" alt="图 4-2"></p><h3 id="4-测试"><a href="#4-测试" class="headerlink" title="4. 测试"></a>4. 测试</h3><p>输入 <code>wget www.google.com</code>, 可以发现连接成功，至此大功告成，如图 5 所示。<br><img src="https://s2.loli.net/2022/10/05/UIQ8LhuROaXq6S2.png" alt="图 5"></p><h5 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h5><p><a href="https://zhuanlan.zhihu.com/p/153124468">为 WSL2 一键设置代理 (zhihu.com)</a><br><a href="https://www.chenyudong.com/archives/sudo-keep-env.html">sudo保持前用用户的env环境变量 (chenyudong.com, 已失效)</a></p>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WSL</tag>
      
      <tag>Clash</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello, World!</title>
    <link href="/2022/03/07/hello-world/"/>
    <url>/2022/03/07/hello-world/</url>
    
    <content type="html"><![CDATA[<p>East Monster 的 Hexo 小站今天建起来了！😏</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    std::cout &lt;&lt; <span class="hljs-string">&quot;Hello, World!\n&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>杂项</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂项</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
